#!/usr/bin/python3.4
# -*- coding: utf-8 -*-

"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
difference are pentagonal and D = |Pk − Pj| is minimised; what is the
value of D?
"""


import math


def pentagonal(n):
    return n * (3 * n - 1) // 2


def is_pentagonal(n):
    pent = (math.sqrt(24 * n + 1) + 1) / 6

    if round(pent, 0) == pent:
        return int(pent)
    else:
        return 0


if __name__ == "__main__":

    perfect_pentagonals = []
    pentagonals = set()
    counter = 1
    find = True
    while find:

        if is_pentagonal(counter):
            pentagonals.add(counter)

            for p in pentagonals:
                # print(p, "->", counter)

                j = p
                k = counter

                if is_pentagonal(j + k):
                    if is_pentagonal(k - j):

                        perfect_pentagonals.append((p, k))
                        print(j, k, k - j)
                        find = False
        counter += 1

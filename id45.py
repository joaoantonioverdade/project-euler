#!/usr/bin/python3.4
# -*- coding: utf-8 -*-

"""
Triangle, pentagonal, and hexagonal numbers are generated by the following
formulae:

Triangle        Tn=n(n+1)/2     1, 3, 6, 10, 15, ...
Pentagonal      Pn=n(3n−1)/2        1, 5, 12, 22, 35, ...
Hexagonal       Hn=n(2n−1)      1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""


import math


def triangles(n):
    return n * (n + 1) / 2


def is_hexagonal(n):
    hexa = (math.sqrt(8 * n + 1) + 1) / 4

    if round(hexa, 0) == hexa:
        return int(hexa)
    else:
        return 0

def is_triangle(n):
    tri = (math.sqrt(8 * n + 1) + 1) / 2

    if round(tri, 0) == tri:
        return int(tri)
    else:
        return 0


def is_pentagonal(n):
    pent = (math.sqrt(24 * n + 1) + 1) / 6

    if round(pent, 0) == pent:
        return int(pent)
    else:
        return 0


if __name__ == "__main__":

    search = True
    counter = 1

    while search:

        c = triangles(counter)

        if is_hexagonal(c) and \
           is_pentagonal(c):

            if c not in [1, 40755]:
                print(c)
                search = False

        counter += 1